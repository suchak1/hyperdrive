# This workflow will update Python dependencies
# For more information see: https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule

name: Dependency Update

on:
  schedule:
    - cron: "0 4 1 * *"
    # 12am EST
  workflow_dispatch:

env:
  # RUN_ID is necessary for tests
  RUN_ID: ${{ github.run_id }}
  RH_USERNAME: ${{ secrets.RH_USERNAME }}
  RH_PASSWORD: ${{ secrets.RH_PASSWORD }}
  RH_2FA: ${{ secrets.RH_2FA }}
  IEXCLOUD: ${{ secrets.IEXCLOUD }}
  IEXCLOUD_SANDBOX: ${{ secrets.IEXCLOUD_SANDBOX }}
  STOCKTWITS: ${{ secrets.STOCKTWITS }}
  GLASSNODE: ${{ secrets.GLASSNODE }}
  BLS: ${{ secrets.BLS }}
  BINANCE_TESTNET_KEY: ${{ secrets.BINANCE_TESTNET_KEY }}
  BINANCE_TESTNET_SECRET: ${{ secrets.BINANCE_TESTNET_SECRET }}
  KRAKEN_KEY: ${{ secrets.KRAKEN_KEY }}
  KRAKEN_SECRET: ${{ secrets.KRAKEN_SECRET }}
  POLYGON: ${{ secrets.POLYGON }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Update dependencies
        run: python util/update.py

      - name: Install dependencies
        run: |
          pip install flake8 pytest coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

      - name: Run all unit tests
        env:
          S3_BUCKET: ${{ secrets.S3_DEV_BUCKET }}
        run: coverage run -m pytest -vv -s

      - name: Generate test coverage report
        run: coverage report -m -i --fail-under=95

      - name: Commit new file(s)
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: requirements.txt
          commit_message: "[auto] dep update #patch"
          commit_user_name: suchak1
          commit_user_email: suchak.krish@gmail.com
          commit_author: Krish Suchak
          push_options: "--force"

      - name: Bump version and push tag
        id: bumpVersion
        uses: anothrNick/github-tag-action@1.61.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          INITIAL_VERSION: true

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bumpVersion.outputs.new_tag }}
